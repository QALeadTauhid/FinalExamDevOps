pipeline {
    agent any

    environment {
        DOCKER_CREDENTIALS = credentials('tauhid1987') // DockerHub username/password
        GOOGLE_CHAT_URL = credentials('google-chat-webhook') // Secret text
        IMAGE_NAME = 'tauhid1987/frontend-app'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/QALeadTauhid/FinalExamDevOps.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def now = new Date().format("dd-MM-HH-mm")
                    def tag = "pipeline_${env.BUILD_NUMBER}-${now}"
                    env.IMAGE_TAG = tag

                    sh """
                    docker build -t ${IMAGE_NAME}:${IMAGE_TAG} -f frontend-app/Dockerfile frontend-app
                    docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest
                """

                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                script {
                    sh "echo ${DOCKER_CREDENTIALS_PSW} | docker login -u ${DOCKER_CREDENTIALS_USR} --password-stdin"
                    sh """
                        docker push ${IMAGE_NAME}:${IMAGE_TAG}
                        docker push ${IMAGE_NAME}:latest
                        docker logout
                    """
                }
            }
        }

        stage('Update docker-compose.yaml and Restart') {
            steps {
                script {
                    sh """
                        sed -i 's|image:.*|image: ${IMAGE_NAME}:${IMAGE_TAG}|' docker-compose.yaml
                        docker-compose down
                        docker-compose up -d
                    """
                }
            }
        }

        stage('Push docker-compose.yaml back to GitHub') {
            steps {
                script {
                    sh """
                        git config --global user.name "jenkins"
                        git config --global user.email "jenkins@example.com"
                        git add docker-compose.yaml
                        git commit -m "Updated image tag to ${IMAGE_TAG}"
                        git push origin main
                    """
                }
            }
        }

        stage('Send Google Chat Notification') {
            steps {
                script {
                    def message = """{
                      "text": "*Deployment Successful*\\nImage: ${IMAGE_NAME}:${IMAGE_TAG}"
                    }"""
                    sh """
                        curl -X POST -H 'Content-Type: application/json' \
                        -d '${message}' "${GOOGLE_CHAT_URL}"
                    """
                }
            }
        }

        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }
    }

    post {
        failure {
            script {
                def message = """{
                  "text": "* Deployment Failed*\\nCheck Jenkins logs for details."
                }"""
                sh """
                    curl -X POST -H 'Content-Type: application/json' \
                    -d '${message}' "${GOOGLE_CHAT_URL}"
                """
            }
        }
    }
}
